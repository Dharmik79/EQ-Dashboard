{"version":3,"sources":["components/Text.jsx","components/Map.jsx","config/color.js","components/BarChart.jsx","components/TimeLine.jsx","components/DepthChart.jsx","api/index.js","api/list.js","api/common.js","App.js","index.js"],"names":["Text","_ref","count","data","setGeo","geo","startDate","endDate","_useState","useState","_useState2","_slicedToArray","maxMag","setMaxMag","hotzones","recentEarthQuakes","sort","a","b","properties","time","forEach","quake","latitude","geometry","coordinates","toFixed","longitude","place","key","concat","magnitude","mag","arrayData","Object","values","slice","React","createElement","className","onClick","lat","long","eqIcon","L","Icon","iconUrl","iconSize","icons","fetchIcon","size","divIcon","html","Map","selectedRange","selectedDepthRange","bounds","setBounds","_useState3","_useState4","zoom","setZoom","mapRef","useRef","updateMap","leaflet","current","leafletElement","getBounds","currentZoom","getZoom","getSouthWest","lng","getNorthEast","useEffect","_useSupercluster","useSupercluster","points","features","filter","feature","options","radius","maxZoom","minZoom","clusters","supercluster","style","height","width","MapContainer","center","ref","onMoveEnd","TileLayer","attribution","url","map","cluster","_cluster$geometry$coo","_cluster$properties","isCluster","pointCount","point_count","Marker","id","position","icon","length","expansionZoom","Math","min","getClusterExpansionZoom","setView","animate","Tooltip","getColor","BarChart","onRangeSelected","svgRef","resetBrushRef","magData","magType","round","magArray","keys","parseFloat","uniqueMagnitudes","barWidth","x","scaleBand","domain","d","range","paddingInner","y","scaleLinear","d3","integerTickValues","Number","isInteger","xAxis","axisBottom","tickValues","yAxis","axisLeft","select","call","getNearestMagnitude","xCoord","index","brush","brushX","extent","on","d3Event","selection","_d3Event$selection","minX","maxX","selectedMinMag","selectedMaxMag","append","attr","text","selectAll","remove","svg","move","join","console","log","display","justifyContent","alignItems","cursor","overflow","marginLeft","changeYear","date","newYear","dateParts","split","day","month","GetSelectedYear","yearSelected","setYear","setStartDate","setEndDate","name","onChange","event","year","target","value","newStartDate","newEndDate","selected","TimeLineChart","_ref2","chartRef","sDate","Date","eDate","push","setDate","getDate","margin","top","right","bottom","left","clientWidth","clientHeight","tickFormat","tickSize","tickPadding","selectedStartDate","invert","selectedEndDate","maxBrushDuration","getFullYear","getMonth","abs","getTime","toISOString","DepthChart","depth","depthExtent","xScale","yScale","max","ticks","i","ceil","generateIntegerTicks","selectedMinDepth","selectedMaxDepth","ACTION_HANDLERS","_defineProperty","headers","queryUrl","axios","get","handleError","error","Promise","reject","fetchUrl","type","_ref2$data","_ref2$config","config","contentType","defaults","Accept","handler","toUpperCase","then","response","resolve","catch","apiList","getData","method","getCount","commonApi","_ref$parameters","parameters","action","_ref$module","module","api","apply","_toConsumableArray","Error","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","result","__await","unwrapped","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","App","setData","_useState5","_useState6","_useState7","_useState8","setCount","_useState9","_useState10","setSelectedRange","_useState11","_useState12","setSelectedDepthRange","_useState13","_useState14","_useState15","_useState16","_asyncToGenerator","_callee","resultData","resultCount","_context","arguments","TimeLine","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.dba5499c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Text.css\";\r\nfunction Text({ count, data, geo, setGeo,startDate,endDate }) {\r\n  const [maxMag, setMaxMag] = useState(0);\r\n\r\n  const hotzones = {};\r\n\r\n  const recentEarthQuakes=data.sort((a,b)=>b.properties.time-a.properties.time)\r\n\r\n  data.forEach((quake) => {\r\n    const latitude = quake.geometry.coordinates[1].toFixed(1);\r\n    const longitude = quake.geometry.coordinates[0].toFixed(1);\r\n    const place = quake.properties.place;\r\n    const key = `${latitude},${longitude}`;\r\n    const magnitude = quake.properties.mag;\r\n    if (magnitude > maxMag) {\r\n      setMaxMag(magnitude);\r\n    }\r\n    if (hotzones[key]) {\r\n      hotzones[key].count += 1;\r\n    } else {\r\n      hotzones[key] = {\r\n        latitude,\r\n        longitude,\r\n        count: 1,\r\n        place,\r\n      };\r\n    }\r\n  });\r\n\r\n  const dataArray = Object.values(hotzones);\r\n  const sortedData = dataArray.sort((a, b) => b.count - a.count);\r\n  const arrayData = sortedData.slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"text\">\r\n      <div className=\"text-design\">\r\n        <p className=\"h2\">\r\n          WORLD'S <br></br>EARTHQUAKES{\" \"}\r\n        </p>\r\n        <span className=\"time-zones\">Data Range : {startDate} to {endDate}</span>\r\n\r\n        <div className=\"earthquakestats\">\r\n          <hr />\r\n          <div className=\"statsdata\">\r\n            <div className=\"dataview\">\r\n              <span>{maxMag}</span>\r\n              <span>Max Magnitude</span>\r\n            </div>\r\n            <div className=\"dataview\">\r\n              <span>{count}</span>\r\n              <span>Total Count</span>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"hot-zones\">\r\n          <p className=\"hot-zone-underline\">HOT ZONES:</p>\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[0] &&\r\n                  setGeo({\r\n                    lat: arrayData[0].latitude,\r\n                    long: arrayData[0].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[0] && arrayData[0].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[1] &&\r\n                  setGeo({\r\n                    lat: arrayData[1].latitude,\r\n                    long: arrayData[1].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[1] && arrayData[1].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[2] &&\r\n                  setGeo({\r\n                    lat: arrayData[2].latitude,\r\n                    long: arrayData[2].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[2] && arrayData[2].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[3] &&\r\n                  setGeo({\r\n                    lat: arrayData[3].latitude,\r\n                    long: arrayData[3].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[3] && arrayData[3].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[4] &&\r\n                  setGeo({\r\n                    lat: arrayData[4].latitude,\r\n                    long: arrayData[4].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[4] && arrayData[4].place}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"recent-earthquakes\">\r\n          <p className=\"recent-earthquake-underline\">RECENT EARTHQUAKES:</p>\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                recentEarthQuakes[0] &&\r\n                  setGeo({\r\n                    lat: recentEarthQuakes[0].geometry.coordinates[1].toFixed(1),\r\n                    long: recentEarthQuakes[0].geometry.coordinates[0].toFixed(1),\r\n                  });\r\n              }}\r\n            >\r\n              {recentEarthQuakes[0] && recentEarthQuakes[0].properties.place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                recentEarthQuakes[1] &&\r\n                  setGeo({\r\n                    lat: recentEarthQuakes[1].geometry.coordinates[1].toFixed(1),\r\n                    long: recentEarthQuakes[1].geometry.coordinates[0].toFixed(1),\r\n                  });\r\n              }}\r\n            >\r\n              {recentEarthQuakes[1] && recentEarthQuakes[1].properties.place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                recentEarthQuakes[2] &&\r\n                  setGeo({\r\n                    lat: recentEarthQuakes[2].geometry.coordinates[1].toFixed(1),\r\n                    long: recentEarthQuakes[2].geometry.coordinates[0].toFixed(1),\r\n                  });\r\n              }}\r\n            >\r\n              {recentEarthQuakes[2] && recentEarthQuakes[2].properties.place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                recentEarthQuakes[3] &&\r\n                  setGeo({\r\n                    lat: recentEarthQuakes[3].geometry.coordinates[1].toFixed(1),\r\n                    long: recentEarthQuakes[3].geometry.coordinates[0].toFixed(1),\r\n                  });\r\n              }}\r\n            >\r\n              {recentEarthQuakes[3] && recentEarthQuakes[3].properties.place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                recentEarthQuakes[4] &&\r\n                  setGeo({\r\n                    lat: recentEarthQuakes[4].geometry.coordinates[1].toFixed(1),\r\n                    long: recentEarthQuakes[4].geometry.coordinates[0].toFixed(1),\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[4] && arrayData[4].place}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const Table = () => {\r\n//   const [data, setData] = useState([\r\n//     { id: 1, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 2, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 3, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 4, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 5, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 6, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 7, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 8, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 9, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 10, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 11, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 12, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 13, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 10, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 11, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 12, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 13, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//   ]);\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>ID</th>\r\n//           <th>Name</th>\r\n//           <th>Email</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data.map((item) => (\r\n//           <tr key={item.id}>\r\n//             <td>{item.id}</td>\r\n//             <td>{item.name}</td>\r\n//             <td>{item.email}</td>\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default Table;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  Map as MapContainer,\r\n  Marker,\r\n  Popup,\r\n  TileLayer,\r\n  Tooltip,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport \"./Map.css\";\r\nconst eqIcon = new L.Icon({\r\n  iconUrl: \"./earthquake.svg\",\r\n  iconSize: [20, 20],\r\n});\r\n\r\nconst icons = {};\r\nconst fetchIcon = (count, size) => {\r\n  if (!icons[count]) {\r\n    icons[count] = L.divIcon({\r\n      html: `<div class=\"cluster-marker\" style=\"width: ${size}px; height: ${size}px;\">\r\n        ${count}\r\n      </div>`,\r\n    });\r\n  }\r\n  return icons[count];\r\n};\r\n\r\nfunction Map({ data, geo, setGeo, selectedRange, selectedDepthRange }) {\r\n  const [bounds, setBounds] = useState(null);\r\n  const [zoom, setZoom] = useState(5); // set the default zoom level\r\n  const mapRef = useRef(); // adding reference to the leaflet map\r\n\r\n  function updateMap() {\r\n    const leaflet = mapRef.current.leafletElement;\r\n    const b = leaflet.getBounds();\r\n    const currentZoom = leaflet.getZoom();\r\n\r\n    // Set bounds state\r\n    setBounds([\r\n      b.getSouthWest().lng,\r\n      b.getSouthWest().lat,\r\n      b.getNorthEast().lng,\r\n      b.getNorthEast().lat,\r\n    ]);\r\n\r\n    // Check if current zoom is less than 3 and update if necessary\r\n    if (currentZoom < 2) {\r\n      leaflet.setZoom(2);\r\n      setZoom(2);\r\n    } else {\r\n      setZoom(currentZoom);\r\n    }\r\n    //  setGeo(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateMap();\r\n  }, []);\r\n\r\n  const { clusters, supercluster } = useSupercluster({\r\n    points: data\r\n      ? data.features.filter((feature) =>\r\n          selectedRange && selectedDepthRange\r\n            ? feature.properties.mag >= selectedRange[0] &&\r\n              feature.properties.mag <= selectedRange[1] &&\r\n              feature.geometry.coordinates[2] >= selectedDepthRange[0] &&\r\n              feature.geometry.coordinates[2] <= selectedDepthRange[1]\r\n            : selectedRange && !selectedDepthRange\r\n            ? feature.properties.mag >= selectedRange[0] &&\r\n              feature.properties.mag <= selectedRange[1]\r\n            : !selectedRange && selectedDepthRange\r\n            ? feature.geometry.coordinates[2] >= selectedDepthRange[0] &&\r\n              feature.geometry.coordinates[2] <= selectedDepthRange[1]\r\n            : true\r\n        )\r\n      : [],\r\n    bounds,\r\n    zoom,\r\n    options: { radius: 75, maxZoom: 17, minZoom: 3 },\r\n  });\r\n\r\n  return (\r\n    <div className=\"map\" style={{ height: \"100%\", width: \"100%\" }}>\r\n      <MapContainer\r\n        center={geo ? [geo.lat, geo.long] : [39.2532498, 43.6487262]}\r\n        zoom={geo ? 10 : 2}\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n        ref={mapRef}\r\n        minZoom={2} // Set the minimum zoom level\r\n        maxZoom={17} // Set the maximum zoom level\r\n        onMoveEnd={updateMap}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {clusters.map((cluster) => {\r\n          const [longitude, latitude] = cluster.geometry.coordinates;\r\n          // Checking if the cluster are present or not\r\n          const { cluster: isCluster, point_count: pointCount } =\r\n            cluster.properties;\r\n\r\n          // we have a cluster to render\r\n          if (isCluster) {\r\n            return (\r\n              <Marker\r\n                key={`cluster-${cluster.id}`}\r\n                position={[latitude, longitude]}\r\n                icon={fetchIcon(pointCount, 10 + pointCount / clusters.length)}\r\n                onClick={() => {\r\n                  const expansionZoom = Math.min(\r\n                    supercluster.getClusterExpansionZoom(cluster.id),\r\n                    17\r\n                  );\r\n                  const leaflet = mapRef.current.leafletElement;\r\n                  leaflet.setView([latitude, longitude], expansionZoom, {\r\n                    animate: true,\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> */}\r\n              </Marker>\r\n            );\r\n          }\r\n          return (\r\n            <Marker\r\n              key={cluster.id}\r\n              position={[latitude, longitude]}\r\n              icon={eqIcon}\r\n              onClick={() => {\r\n                const leaflet = mapRef.current.leafletElement;\r\n                leaflet.setView([latitude, longitude], 15, { animate: true });\r\n              }}\r\n            >\r\n              <Tooltip>\r\n                <div className=\"tool-tip\">\r\n                  <div>Latitude: {latitude}</div>\r\n                  <div>Longitude: {longitude}</div>\r\n                  <div>Place: {cluster.properties.place}</div>\r\n                  <div>Magnitude: {cluster.properties.mag}</div>\r\n                  <div>Depth: {cluster.geometry.coordinates[2]} km</div>\r\n                </div>\r\n              </Tooltip>\r\n              {/* <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> */}\r\n            </Marker>\r\n          );\r\n        })}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","const getColor = (mag) => {\r\n    if (mag >= -2 && mag < -1) return \"#e41a1c\";\r\n    if (mag >= -1 && mag < 0) return \"#a6cee3\";\r\n    if (mag >= 0 && mag < 1) return \"#4daf4a\";\r\n    if (mag >= 1 && mag < 2) return \"#984ea3\";\r\n    if (mag >= 2 && mag < 3) return \"#ff7f00\";\r\n    if (mag >= 3 && mag < 4) return \"#1f78b4\";\r\n    if (mag >= 4 && mag < 5) return \"#a65628\";\r\n    if (mag >= 5 && mag < 6) return \"#f781bf\";\r\n    return \"gray\";\r\n  };\r\n\r\nexport default getColor;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./BarChart.css\";\r\nimport { select, event as d3Event } from \"d3-selection\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { scaleLinear, scaleBand } from \"d3\";\r\nimport { brushX } from \"d3-brush\";\r\nimport * as d3 from \"d3\";\r\nimport getColor from \"../config/color\";\r\nfunction BarChart({ data, onRangeSelected }) {\r\n  const svgRef = useRef();\r\n  const resetBrushRef = useRef(null);\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const magData = {};\r\n\r\n    data.features.forEach((feature) => {\r\n      const magType = Math.round(feature.properties.mag * 10) / 10;\r\n      if (magData[magType]) {\r\n        magData[magType].count += 1;\r\n      } else {\r\n        magData[magType] = {\r\n          count: 1,\r\n        };\r\n      }\r\n    });\r\n\r\n    const sortedData = Object.keys(magData).map((mag) => ({\r\n      mag: parseFloat(mag),\r\n      count: magData[mag].count,\r\n    }));\r\n    const magArray = sortedData.sort((a, b) => a.mag - b.mag);\r\n\r\n    const uniqueMagnitudes = magArray.length;\r\n    const barWidth = 300 / uniqueMagnitudes - 1;\r\n    const x = scaleBand()\r\n      .domain(magArray.map((d) => d.mag))\r\n      .range([0, 420])\r\n      .paddingInner(0.1);\r\n\r\n    const y = scaleLinear()\r\n      .domain([0, d3.max(magArray, (d) => d.count)])\r\n      .range([180, 0]);\r\n\r\n    const integerTickValues = magArray\r\n      .map((d) => d.mag)\r\n      .filter((mag) => Number.isInteger(mag));\r\n\r\n    const xAxis = axisBottom(x).tickValues(integerTickValues);\r\n    const yAxis = axisLeft(y);\r\n\r\n    select(svgRef.current)\r\n      .select(\".x-axis\")\r\n      .style(\"transform\", \"translateY(180px)\")\r\n      .call(xAxis);\r\n\r\n    select(svgRef.current)\r\n      .select(\".y-axis\")\r\n      .style(\"transform\", \"translateX(0px)\")\r\n      .call(yAxis);\r\n    const getNearestMagnitude = (xCoord) => {\r\n      const index = Math.round((xCoord * uniqueMagnitudes) / 420);\r\n      return magArray[index] ? magArray[index].mag : null;\r\n    };\r\n    const brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [420, 180],\r\n      ])\r\n      .on(\"brush end\", () => {\r\n        if (d3Event.selection) {\r\n          const [minX, maxX] = d3Event.selection;\r\n          const selectedMinMag = getNearestMagnitude(minX);\r\n          let selectedMaxMag = getNearestMagnitude(maxX);\r\n\r\n          if (selectedMaxMag == null) {\r\n            selectedMaxMag = 10;\r\n          }\r\n          onRangeSelected([selectedMinMag, selectedMaxMag]);\r\n        } else {\r\n          onRangeSelected(null);\r\n        }\r\n      });\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `translate(${420 / 2},${210})`)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Magnitude\");\r\n\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `rotate(-90)`)\r\n      .attr(\"x\", -(180 / 2))\r\n      .attr(\"y\", -50)\r\n      .attr(\"dy\", \"1em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Total Count\");\r\n\r\n    select(svgRef.current).selectAll(\".brush\").remove();\r\n    onRangeSelected(null);\r\n    const svg = select(svgRef.current);\r\n    const resetBrush = () => {\r\n      svg.select(\".brush\").call(brush.move, null);\r\n      onRangeSelected(null);\r\n    };\r\n    resetBrushRef.current = resetBrush;\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(magArray)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (d) => x(d.mag))\r\n      .attr(\"y\", (d) => y(d.count))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"height\", (d) => 180 - y(d.count))\r\n      .attr(\"fill\", (d) => getColor(d.mag))\r\n      .on(\"click\", (d) => {\r\n        console.log(\"d\", d);\r\n      });\r\n\r\n    select(svgRef.current).append(\"g\").attr(\"class\", \"brush\").call(brush);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"barview\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p className=\"bar-chart-name\">Earthquake Magnitude Histogram</p>\r\n        <button\r\n          className=\"button-style\"\r\n          onClick={resetBrushRef.current}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Reset{\" \"}\r\n        </button>\r\n      </div>\r\n      <svg ref={svgRef} style={{ overflow: \"visible\", marginLeft: \"12dvh\" }}>\r\n        <g className=\"x-axis\"></g>\r\n        <g className=\"y-axis\"></g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./TimeLine.css\";\r\n\r\nfunction changeYear(date, newYear) {\r\n  const dateParts = date.split(\"-\");\r\n  const day = dateParts[2];\r\n  const month = dateParts[1];\r\n  return `${newYear}-${month}-${day}`;\r\n}\r\nconst GetSelectedYear = ({\r\n  yearSelected,\r\n  setYear,\r\n  setStartDate,\r\n  setEndDate,\r\n  startDate,\r\n  endDate,\r\n}) => {\r\n  const onChange = (event) => {\r\n    let year = event.target.value;\r\n    let newStartDate = changeYear(startDate, year);\r\n    let newEndDate = changeYear(endDate, year);\r\n    setStartDate(newStartDate);\r\n    setEndDate(newEndDate);\r\n\r\n    setYear(year);\r\n  };\r\n  return (\r\n    <select id=\"year\" name=\"year\" onChange={onChange}>\r\n      <option value=\"\">Select Year</option>\r\n      {[\r\n        \"2022\",\r\n        \"2021\",\r\n        \"2020\",\r\n        \"2019\",\r\n        \"2018\",\r\n        \"2017\",\r\n        \"2016\",\r\n        \"2015\",\r\n        \"2014\",\r\n        \"2013\",\r\n        \"2012\",\r\n        \"2011\",\r\n        \"2010\",\r\n        \"2009\",\r\n        \"2008\",\r\n        \"2007\",\r\n        \"2006\",\r\n        \"2005\",\r\n        \"2004\",\r\n        \"2003\",\r\n        \"2002\",\r\n        \"2001\",\r\n        \"2000\",\r\n      ].map((year) => (\r\n        <option key={year} value={year} selected={year === yearSelected}>\r\n          {year}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\nconst TimeLineChart = ({\r\n  startDate,\r\n  endDate,\r\n  setStartDate,\r\n  setEndDate,\r\n  year,\r\n  setYear,\r\n}) => {\r\n  const chartRef = useRef(null);\r\n\r\n  const data = [];\r\n\r\n  let sDate = new Date(year, 0, 1);\r\n  const eDate = new Date(year, 11, 31);\r\n\r\n  while (sDate <= eDate) {\r\n    data.push({ day: new Date(sDate), value: 1 });\r\n    sDate.setDate(sDate.getDate() + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\r\n      const width = chartRef.current.clientWidth - margin.left - margin.right;\r\n      const height = chartRef.current.clientHeight - margin.top - margin.bottom;\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain([new Date(year, 0, 1), new Date(year, 11, 31)])\r\n        .range([0, width]);\r\n\r\n      const xAxis = d3\r\n        .axisBottom(x)\r\n        .tickFormat(d3.timeFormat(\"%b\"))\r\n        .tickValues(\r\n          d3.timeMonth.range(new Date(year, 0, 1), new Date(year, 11, 31), 1)\r\n        )\r\n        .tickSize(10)\r\n        .tickPadding(5);\r\n\r\n      const brush = d3\r\n        .brushX()\r\n        .extent([\r\n          [0, 0],\r\n          [width, height],\r\n        ])\r\n        .on(\"end\", brushed);\r\n      d3.select(chartRef.current).selectAll(\"*\").remove();\r\n      const svg = d3\r\n        .select(chartRef.current)\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n      svg\r\n        .append(\"rect\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"fill\", \"gray\");\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", `translate(0, ${height})`)\r\n        .call(xAxis);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"brush\")\r\n        .call(brush)\r\n        .call(\r\n          brush.move,\r\n          startDate && endDate\r\n            ? [x(new Date(startDate)), x(new Date(endDate))]\r\n            : null\r\n        );\r\n\r\n        function brushed() {\r\n          const selection = d3.event.selection;\r\n          let selectedStartDate = selection ? x.invert(selection[0]) : null;\r\n          let selectedEndDate = selection ? x.invert(selection[1]) : null;\r\n        \r\n          if (selectedStartDate && selectedEndDate) {\r\n            const daysInMonth = new Date(\r\n              selectedStartDate.getFullYear(),\r\n              selectedStartDate.getMonth() + 1,\r\n              0\r\n            ).getDate();\r\n            const maxBrushDuration = daysInMonth;\r\n            const dateDifference = Math.abs(\r\n              (selectedEndDate - selectedStartDate) / (1000 * 60 * 60 * 24)\r\n            );\r\n            if (dateDifference > maxBrushDuration) {\r\n              selectedEndDate = new Date(\r\n                selectedStartDate.getTime() + maxBrushDuration * 24 * 60 * 60 * 1000\r\n              );\r\n              if (selectedEndDate > eDate) {\r\n                selectedEndDate = eDate;\r\n                selectedStartDate = new Date(\r\n                  selectedEndDate.getTime() - maxBrushDuration * 24 * 60 * 60 * 1000\r\n                );\r\n              }\r\n              svg.select(\".brush\").call(brush.move, [\r\n                x(selectedStartDate),\r\n                x(selectedEndDate),\r\n              ]);\r\n            }\r\n            setStartDate(selectedStartDate.toISOString().split(\"T\")[0]);\r\n            setEndDate(selectedEndDate.toISOString().split(\"T\")[0]);\r\n          } else {\r\n            selectedStartDate = new Date(startDate);\r\n            selectedEndDate = new Date(endDate);\r\n            svg.select(\".brush\").call(brush.move, [\r\n              x(selectedStartDate),\r\n              x(selectedEndDate),\r\n            ]);\r\n          }\r\n        \r\n          svg.selectAll(\".selection\").attr(\"fill\", selection ? \"blue\" : \"gray\");\r\n        }\r\n        \r\n    }\r\n  }, [data, startDate, endDate, year]);\r\n  return (\r\n    <div className=\"timeline\">\r\n      <div className=\"filter\">\r\n        <label className=\"year-filter\">Filter:</label>\r\n        <GetSelectedYear\r\n          yearSelected={year}\r\n          setYear={setYear}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          setStartDate={setStartDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n      </div>\r\n      <svg ref={chartRef} width=\"90%\" height={70}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeLineChart;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./DepthChart.css\";\r\nimport { select, event as d3Event } from \"d3-selection\";\r\n\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { scaleLinear } from \"d3\";\r\nimport { extent } from \"d3-array\";\r\nimport getColor from \"../config/color\";\r\nimport * as d3 from \"d3\";\r\nimport { brushX } from \"d3-brush\";\r\nimport { format } from \"d3-format\";\r\n\r\nfunction generateIntegerTicks(min, max) {\r\n  const ticks = [];\r\n  for (let i = Math.ceil(min); i <= max; i++) {\r\n    if (Number.isInteger(i)) {\r\n      ticks.push(i);\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\n\r\nfunction DepthChart({ data, onRangeSelected }) {\r\n  const svgRef = useRef();\r\n  const resetBrushRef = useRef(null);\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    let magData = [];\r\n\r\n    data.features.forEach((feature) => {\r\n      const mag = Math.round(feature.properties.mag * 10) / 10;\r\n      const depth = feature.geometry.coordinates[2];\r\n      if (depth > 0 ) {\r\n        magData.push({ depth: depth, magnitude: mag });\r\n      }\r\n    });\r\n\r\n    const svg = select(svgRef.current);\r\n    const resetBrush = () => {\r\n      svg.select(\".brush\").call(brush.move, null);\r\n      onRangeSelected(null);\r\n    };\r\n    resetBrushRef.current = resetBrush;\r\n    const depthExtent = extent(magData, (d) => d.depth);\r\n    const margin = (depthExtent[1] - depthExtent[0]) * 0.003; // Calculate 5% margin\r\n    const xScale = scaleLinear()\r\n      .domain([depthExtent[0] - margin, depthExtent[1]]) // Add the margin to the minimum depth value\r\n      .range([0, 420]);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([d3.min(magData, (d) => d.magnitude), d3.max(magData, (d) => d.magnitude)])\r\n      .range([180, 0]);\r\n\r\n    const xAxis = axisBottom(xScale);\r\n\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(180px)\").call(xAxis);\r\n\r\n    const yAxis = axisLeft(yScale).tickValues(\r\n      generateIntegerTicks(yScale.domain()[0], yScale.domain()[1])\r\n    );\r\n\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(0px)\").call(yAxis);\r\n\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `translate(${420 / 2},${210})`)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Depth (KM)\");\r\n\r\n    const brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [420, 180],\r\n      ])\r\n      .on(\"brush end\", () => {\r\n        if (d3Event.selection) {\r\n          const [minX, maxX] = d3Event.selection;\r\n          const selectedMinDepth = xScale.invert(minX);\r\n          const selectedMaxDepth = xScale.invert(maxX);\r\n\r\n          onRangeSelected([selectedMinDepth, selectedMaxDepth]);\r\n        }\r\n        else {\r\n          onRangeSelected(null);\r\n        }\r\n      });\r\n\r\n    select(svgRef.current).selectAll(\".brush\").remove();\r\n    onRangeSelected(null);\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `rotate(-90)`)\r\n      .attr(\"x\", -(180 / 2))\r\n      .attr(\"y\", -50)\r\n      .attr(\"dy\", \"1em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Magnitude\");\r\n\r\n    svg\r\n      .selectAll(\".circle\")\r\n      .data(magData)\r\n      .join(\"circle\")\r\n      .attr(\"class\", \"circle\")\r\n      .attr(\"cx\", (d) => xScale(d.depth))\r\n      .attr(\"cy\", (d) => yScale(d.magnitude))\r\n      .attr(\"r\", 1)\r\n      .attr(\"fill\", (d) => getColor(d.magnitude));\r\n\r\n    select(svgRef.current).append(\"g\").attr(\"class\", \"brush\").call(brush);\r\n  }, [data]);\r\n  return (\r\n    <div className=\"depthview\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p className=\"bar-chart-name\">Depth Chart Analysis</p>\r\n        <button className=\"button-style\" onClick={resetBrushRef.current} style={{cursor:\"pointer\"}}>\r\n          \r\n          Reset\r\n        </button>\r\n      </div>\r\n      <svg ref={svgRef} style={{ overflow: \"visible\", marginLeft: \"10dvh\" }}>\r\n        <g className=\"x-axis\"></g>\r\n        <g className=\"y-axis\"></g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepthChart;\r\n","import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst baseUrl = \"https://earthquake.usgs.gov/fdsnws/event/1/\";\r\nconst GET = \"GET\";\r\n\r\n\r\nconst ACTION_HANDLERS = {\r\n  [GET]: (url, data, headers) => {\r\n    let queryUrl = url;\r\n    // if (data !== undefined) {\r\n    //   const query = qs.stringify(data);\r\n \r\n    //   queryUrl = `${queryUrl}?${query}`;\r\n    //   console.log(\"queryURL\",queryUrl)\r\n    // }\r\n\r\n    return axios.get(baseUrl+queryUrl+\"&mindepth=0&maxdepth=250&minmagnitude=0\" , {\r\n      headers\r\n    });\r\n  },\r\n\r\n};\r\n\r\nfunction setHeaders({ contentType }) {\r\n  // set contentType\r\n\r\n   \r\n    axios.defaults.headers.get.Accept = \"application/json\";\r\n  \r\n}\r\n\r\nfunction handleError(error) {\r\n  return Promise.reject(error);\r\n}\r\nconst fetchUrl = ({ type, url, data = {}, config = {} }) => {\r\n  setHeaders(config);\r\n  const handler = ACTION_HANDLERS[type.toUpperCase()];\r\n\r\n  return handler(url, data, config.headers)\r\n    .then((response) => Promise.resolve(response.data))\r\n    .catch(handleError);\r\n};\r\n\r\nexport default fetchUrl;","const apiList = {\r\n  getData: {\r\n    url: (data) => {\r\n      return `query?format=geojson&starttime=${data.startDate}&endtime=${data.endDate}`;\r\n    },\r\n    method: \"get\",\r\n  },\r\n  getCount:{\r\n    url: (data) => {\r\n      return `count?starttime=${data.startDate}&endtime=${data.endDate}`;\r\n    },\r\n    method: \"get\",\r\n  }\r\n};\r\nexport default apiList;\r\n","import fetchUrl from \"./index\";\r\nimport apiList from \"./list\";\r\n\r\n/**\r\n * Use this commonApi function to call all APIs.\r\n * The only thing you need to make sure you pass valid arguments,\r\n * For reference you can find api list in @/api/list.js\r\n * @param {*} { parameters = [], action, module = '', data }\r\n * @return {*}\r\n */\r\nconst commonApi = ({ parameters = [], action, module = \"\", data, config }) => {\r\n\r\n  const api = apiList[`${action}${module}`];\r\n  if (api) {\r\n    return fetchUrl({\r\n      type: api.method,\r\n      url: api.url(...parameters),\r\n      data,\r\n      config\r\n    });\r\n  }\r\n\r\n  return Promise.reject(\r\n    new Error(\"Oops!, I believe you have called wrong url.\")\r\n  );\r\n};\r\n\r\nexport default commonApi;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Text from \"./components/Text\";\r\nimport Map from \"./components/Map\";\r\nimport BarChart from \"./components/BarChart\";\r\nimport TimeLine from \"./components/TimeLine\";\r\nimport DepthChart from \"./components/DepthChart\";\r\nimport commonApi from \"./api/common\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(null);\r\n  const [startDate, setStartDate] = useState(\"2022-01-01\");\r\n  const [endDate, setEndDate] = useState(\"2022-01-11\");\r\n  const [count, setCount] = useState();\r\n  const [selectedRange, setSelectedRange] = useState(null);\r\n  const [selectedDepthRange, setSelectedDepthRange] = useState(null);\r\n  const [geo, setGeo] = useState(null);\r\n  const [year,setYear]=useState(\"2022\")\r\n  const getData = async () => {\r\n    let resultData = await commonApi({\r\n      action: \"getData\",\r\n      parameters: [{ startDate: startDate, endDate: endDate }],\r\n    });\r\n    setData(resultData);\r\n    let resultCount = await commonApi({\r\n      action: \"getCount\",\r\n      parameters: [{ startDate: startDate, endDate: endDate }],\r\n    });\r\n    setCount(resultCount);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"row1\">\r\n        <div className=\"text-container\">\r\n          <Text\r\n            count={count}\r\n            data={data ? data.features : []}\r\n            geo={geo}\r\n            setGeo={setGeo}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        </div>\r\n        <div className=\"map-container\">\r\n          <Map\r\n            data={data}\r\n            selectedRange={selectedRange}\r\n            selectedDepthRange={selectedDepthRange}\r\n            geo={geo}\r\n            setGeo={setGeo}\r\n          />\r\n          <div className=\"row2\">\r\n            <div className=\"bar-chart\">\r\n              <BarChart data={data} onRangeSelected={setSelectedRange} />\r\n            </div>\r\n            <div className=\"depth-chart\">\r\n              <DepthChart data={data} onRangeSelected={setSelectedDepthRange}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row3\">\r\n        <div className=\"time-container\">\r\n          <TimeLine\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            setStartDate={setStartDate}\r\n            setEndDate={setEndDate}\r\n            setSelectedRange={setSelectedRange}\r\n            year={year}\r\n            setYear={setYear}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}