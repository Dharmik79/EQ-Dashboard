{"version":3,"sources":["components/Text.jsx","components/Map.jsx","components/BarChart.jsx","components/TimeLine.jsx","components/DepthChart.jsx","api/index.js","api/list.js","api/common.js","App.js","index.js"],"names":["Text","_ref","count","data","setGeo","geo","_useState","useState","_useState2","_slicedToArray","maxMag","setMaxMag","hotzones","forEach","quake","latitude","geometry","coordinates","toFixed","longitude","place","properties","key","concat","magnitude","mag","arrayData","Object","values","sort","a","b","slice","React","createElement","className","onClick","lat","long","eqIcon","L","Icon","iconUrl","iconSize","icons","fetchIcon","size","divIcon","html","Map","selectedRange","bounds","setBounds","_useState3","_useState4","zoom","setZoom","mapRef","useRef","updateMap","leaflet","current","leafletElement","getBounds","currentZoom","getZoom","getSouthWest","lng","getNorthEast","useEffect","_useSupercluster","useSupercluster","points","features","filter","feature","options","radius","maxZoom","minZoom","clusters","supercluster","style","height","width","MapContainer","center","ref","onMoveEnd","TileLayer","attribution","url","map","cluster","_cluster$geometry$coo","_cluster$properties","isCluster","pointCount","point_count","Marker","id","position","icon","length","expansionZoom","Math","min","getClusterExpansionZoom","setView","animate","Tooltip","BarChart","onRangeSelected","svgRef","resetBrushRef","magData","magType","round","magArray","keys","parseFloat","uniqueMagnitudes","barWidth","x","scaleBand","domain","d","range","paddingInner","y","scaleLinear","d3","integerTickValues","Number","isInteger","xAxis","axisBottom","tickValues","yAxis","axisLeft","select","call","getNearestMagnitude","xCoord","index","brush","brushX","extent","on","d3Event","selection","_d3Event$selection","minX","maxX","selectedMinMag","selectedMaxMag","selectAll","remove","svg","move","join","attr","console","log","append","overflow","TimeLineChart","startDate","endDate","setStartDate","setEndDate","chartRef","sDate","Date","eDate","push","day","value","setDate","getDate","margin","top","right","bottom","left","clientWidth","clientHeight","tickFormat","tickSize","tickPadding","selectedStartDate","invert","selectedEndDate","toISOString","split","DepthChart","xScale","yScale","ticks","myLine","line","baseUrl","ACTION_HANDLERS","_defineProperty","headers","queryUrl","axios","get","handleError","error","Promise","reject","fetchUrl","_ref2","type","_ref2$data","_ref2$config","config","contentType","defaults","Accept","handler","toUpperCase","then","response","resolve","catch","apiList","getData","method","getCount","commonApi","_ref$parameters","parameters","action","_ref$module","module","api","apply","_toConsumableArray","Error","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","result","__await","unwrapped","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","App","setData","_useState5","_useState6","_useState7","_useState8","setCount","_useState9","_useState10","setSelectedRange","_useState11","_useState12","_asyncToGenerator","_callee","resultData","resultCount","_context","arguments","TimeLine","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.239b7273.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Text.css\";\r\nfunction Text({ count, data, geo, setGeo }) {\r\n  const [maxMag, setMaxMag] = useState(0);\r\n\r\n  const hotzones = {};\r\n\r\n  data.forEach((quake) => {\r\n    const latitude = quake.geometry.coordinates[1].toFixed(1);\r\n    const longitude = quake.geometry.coordinates[0].toFixed(1);\r\n    const place = quake.properties.place;\r\n    const key = `${latitude},${longitude}`;\r\n    const magnitude = quake.properties.mag;\r\n    if (magnitude > maxMag) {\r\n      setMaxMag(magnitude);\r\n    }\r\n    if (hotzones[key]) {\r\n      hotzones[key].count += 1;\r\n    } else {\r\n      hotzones[key] = {\r\n        latitude,\r\n        longitude,\r\n        count: 1,\r\n        place,\r\n      };\r\n    }\r\n  });\r\n\r\n  const dataArray = Object.values(hotzones);\r\n  const sortedData = dataArray.sort((a, b) => b.count - a.count);\r\n  const arrayData = sortedData.slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"text\">\r\n      <div className=\"text-design\">\r\n        <p className=\"h2\">\r\n          WORLD'S <br></br>EARTHQUAKES{\" \"}\r\n        </p>\r\n        <span className=\"hot-zones\">Data as 4 PM(PST), March 20, 2023</span>\r\n\r\n        <div className=\"earthquakestats\">\r\n          <hr />\r\n          <div className=\"statsdata\">\r\n            <div className=\"dataview\">\r\n              <span>{maxMag}</span>\r\n              <span>Max Magnitude</span>\r\n            </div>\r\n            <div className=\"dataview\">\r\n              <span>{count}</span>\r\n              <span>Total Count</span>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"hot-zones\">\r\n          <p>HOT ZONES:</p>\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[0] &&\r\n                  setGeo({\r\n                    lat: arrayData[0].latitude,\r\n                    long: arrayData[0].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[0] && arrayData[0].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[1] &&\r\n                  setGeo({\r\n                    lat: arrayData[1].latitude,\r\n                    long: arrayData[1].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[1] && arrayData[1].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[2] &&\r\n                  setGeo({\r\n                    lat: arrayData[2].latitude,\r\n                    long: arrayData[2].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[2] && arrayData[2].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[3] &&\r\n                  setGeo({\r\n                    lat: arrayData[3].latitude,\r\n                    long: arrayData[3].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[3] && arrayData[3].place}\r\n            </li>\r\n            <li\r\n              onClick={() => {\r\n                arrayData[4] &&\r\n                  setGeo({\r\n                    lat: arrayData[4].latitude,\r\n                    long: arrayData[4].longitude,\r\n                  });\r\n              }}\r\n            >\r\n              {arrayData[4] && arrayData[4].place}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const Table = () => {\r\n//   const [data, setData] = useState([\r\n//     { id: 1, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 2, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 3, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 4, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 5, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 6, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 7, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 8, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 9, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 10, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 11, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 12, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 13, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 10, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//     { id: 11, name: \"John Doe\", email: \"johndoe@example.com\" },\r\n//     { id: 12, name: \"Jane Doe\", email: \"janedoe@example.com\" },\r\n//     { id: 13, name: \"Bob Smith\", email: \"bobsmith@example.com\" },\r\n//   ]);\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>ID</th>\r\n//           <th>Name</th>\r\n//           <th>Email</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data.map((item) => (\r\n//           <tr key={item.id}>\r\n//             <td>{item.id}</td>\r\n//             <td>{item.name}</td>\r\n//             <td>{item.email}</td>\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default Table;","import React, { useRef, useState,useEffect } from \"react\";\r\nimport { Map as MapContainer, Marker, Popup, TileLayer, Tooltip } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport \"./Map.css\"\r\nconst eqIcon = new L.Icon({\r\n  iconUrl: \"./earthquake.svg\",\r\n  iconSize: [20, 20]\r\n});\r\n\r\nconst icons = {};\r\nconst fetchIcon = (count, size) => {\r\n  if (!icons[count]) {\r\n    icons[count] = L.divIcon({\r\n      html: `<div class=\"cluster-marker\" style=\"width: ${size}px; height: ${size}px;\">\r\n        ${count}\r\n      </div>`\r\n    });\r\n  }\r\n  return icons[count];\r\n};\r\n\r\n\r\nfunction Map({ data ,geo,setGeo,selectedRange}) {\r\n\r\n  const [bounds, setBounds] = useState(null); \r\n  const [zoom, setZoom] = useState(5); // set the default zoom level\r\n  const mapRef = useRef(); // adding reference to the leaflet map\r\n\r\n  function updateMap() {\r\n    const leaflet = mapRef.current.leafletElement;\r\n    const b = leaflet.getBounds();\r\n    const currentZoom = leaflet.getZoom();\r\n    \r\n    // Set bounds state\r\n    setBounds([\r\n      b.getSouthWest().lng,\r\n      b.getSouthWest().lat,\r\n      b.getNorthEast().lng,\r\n      b.getNorthEast().lat\r\n    ]);\r\n  \r\n    // Check if current zoom is less than 3 and update if necessary\r\n    if (currentZoom < 2) {\r\n      leaflet.setZoom(2);\r\n      setZoom(2);\r\n    } else {\r\n      setZoom(currentZoom);\r\n    }\r\n  //  setGeo(null)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    updateMap();\r\n    \r\n  }, []);\r\n\r\n  const { clusters, supercluster } = useSupercluster({\r\n   points:data\r\n   ? data.features.filter((feature) =>\r\n       selectedRange\r\n         ? feature.properties.mag >= selectedRange[0] &&\r\n           feature.properties.mag <= selectedRange[1]\r\n         : true\r\n     )\r\n   : [],\r\n    bounds,\r\n    zoom,\r\n    options: { radius: 75, maxZoom: 17 ,minZoom: 3}\r\n  });\r\n\r\n  return (\r\n    <div className=\"map\" style={{ height: \"100%\", width: \"100%\" }}>\r\n      <MapContainer\r\n        center={geo?[geo.lat ,geo.long]:[46.58, 80.08]}\r\n        zoom={geo?10:5}\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n        ref={mapRef}\r\n        onMoveEnd={updateMap}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {clusters.map(cluster => {\r\n\r\n          const [longitude, latitude] = cluster.geometry.coordinates;\r\n          // Checking if the cluster are present or not\r\n          const {\r\n            cluster: isCluster,\r\n            point_count: pointCount\r\n          } = cluster.properties;\r\n\r\n            // we have a cluster to render\r\n        if (isCluster) {\r\n          return (\r\n            <Marker\r\n              key={`cluster-${cluster.id}`}\r\n              position={[latitude, longitude]}\r\n              icon={fetchIcon(\r\n                pointCount,\r\n                10 + (pointCount / clusters.length)\r\n              )}\r\n              onClick={() => {\r\n                const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 17);\r\n                const leaflet = mapRef.current.leafletElement;\r\n                leaflet.setView([latitude, longitude], expansionZoom, { animate: true });\r\n              }}\r\n            >\r\n             \r\n              {/* <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> */}\r\n            </Marker>\r\n          );\r\n        }\r\n        return (\r\n          <Marker\r\n            key={cluster.id}\r\n            position={[latitude, longitude]}\r\n            icon={eqIcon}\r\n            onClick={() => {\r\n              const leaflet = mapRef.current.leafletElement;\r\n              leaflet.setView([latitude, longitude], 15, { animate: true });\r\n            }}\r\n          >\r\n            <Tooltip>\r\n                {`Latitude: ${latitude}, Longitude: ${longitude} place: ${cluster.properties.place} magnitude: ${cluster.properties.mag}`}\r\n              </Tooltip>\r\n            {/* <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> */}\r\n          </Marker>\r\n        );\r\n      })}\r\n    </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./BarChart.css\";\r\nimport { select, event as d3Event } from \"d3-selection\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { scaleLinear, scaleBand } from \"d3\";\r\nimport { brushX } from \"d3-brush\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction BarChart({ data, onRangeSelected }) {\r\n  const svgRef = useRef();\r\n  const resetBrushRef = useRef(null);\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const magData = {};\r\n\r\n    data.features.forEach((feature) => {\r\n      const magType = Math.round(feature.properties.mag * 10) / 10;\r\n      if (magData[magType]) {\r\n        magData[magType].count += 1;\r\n      } else {\r\n        magData[magType] = {\r\n          count: 1,\r\n        };\r\n      }\r\n    });\r\n\r\n    const sortedData = Object.keys(magData).map((mag) => ({\r\n      mag: parseFloat(mag),\r\n      count: magData[mag].count,\r\n    }));\r\n    const magArray = sortedData.sort((a, b) => a.mag - b.mag);\r\n\r\n    const uniqueMagnitudes = magArray.length;\r\n    const barWidth = 300 / uniqueMagnitudes - 1;\r\n    const x = scaleBand()\r\n      .domain(magArray.map((d) => d.mag))\r\n      .range([0, 300])\r\n      .paddingInner(0.1);\r\n\r\n    const y = scaleLinear()\r\n      .domain([0, d3.max(magArray, (d) => d.count)])\r\n      .range([150, 0]);\r\n\r\n    const integerTickValues = magArray\r\n      .map((d) => d.mag)\r\n      .filter((mag) => Number.isInteger(mag));\r\n\r\n    const xAxis = axisBottom(x).tickValues(integerTickValues);\r\n    const yAxis = axisLeft(y);\r\n\r\n    select(svgRef.current)\r\n      .select(\".x-axis\")\r\n      .style(\"transform\", \"translateY(150px)\")\r\n      .call(xAxis);\r\n\r\n    select(svgRef.current)\r\n      .select(\".y-axis\")\r\n      .style(\"transform\", \"translateX(0px)\")\r\n      .call(yAxis);\r\n    const getNearestMagnitude = (xCoord) => {\r\n      const index = Math.round((xCoord * uniqueMagnitudes) / 300);\r\n      return magArray[index] ? magArray[index].mag : null;\r\n    };\r\n    const brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [300, 150],\r\n      ])\r\n      .on(\"brush end\", () => {\r\n        if (d3Event.selection) {\r\n          const [minX, maxX] = d3Event.selection;\r\n          const selectedMinMag = getNearestMagnitude(minX);\r\n          const selectedMaxMag = getNearestMagnitude(maxX);\r\n          onRangeSelected([selectedMinMag, selectedMaxMag]);\r\n        }\r\n      });\r\n\r\n    const getColor = (mag) => {\r\n      if (mag >= -2 && mag < -1) return \"white\";\r\n      if (mag >= -1 && mag < 0) return \"blue\";\r\n      if (mag >= 0 && mag < 1) return \"black\";\r\n      if (mag >= 1 && mag < 2) return \"steelblue\";\r\n      if (mag >= 2 && mag < 3) return \"pink\";\r\n      if (mag >= 3 && mag < 4) return \"yellow\";\r\n      if (mag >= 4 && mag < 5) return \"orange\";\r\n      if (mag >= 5 && mag < 6) return \"red\";\r\n      return \"gray\";\r\n    };\r\n    select(svgRef.current)\r\n      .selectAll(\".brush\")\r\n      .remove();\r\n    onRangeSelected(null);\r\n    const svg = select(svgRef.current);\r\n    const resetBrush = () => {\r\n      svg.select(\".brush\").call(brush.move, null);\r\n      onRangeSelected(null);\r\n    };\r\n    resetBrushRef.current = resetBrush;\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(magArray)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (d) => x(d.mag))\r\n      .attr(\"y\", (d) => y(d.count))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"height\", (d) => 150 - y(d.count))\r\n      .attr(\"fill\", (d) => getColor(d.mag))\r\n      .on(\"click\", (d) => {\r\n        console.log(\"d\", d);\r\n      });\r\n\r\n    select(svgRef.current)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"brush\")\r\n      .call(brush);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"barview\">\r\n      <button onClick={resetBrushRef.current}>Reset</button>\r\n      <p>Earthquake Magnitude Histogram</p>\r\n      <svg ref={svgRef} style={{ overflow: \"visible\" }}>\r\n        <g className=\"x-axis\"></g>\r\n        <g className=\"y-axis\"></g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./TimeLine.css\"\r\nconst TimeLineChart = ({ startDate, endDate, setStartDate, setEndDate }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  const data = [];\r\n\r\n  let sDate = new Date(2022, 0, 1);\r\n  const eDate = new Date(2022, 11, 31);\r\n\r\n  while (sDate <= eDate) {\r\n    data.push({ day: new Date(sDate), value: 1 });\r\n    sDate.setDate(sDate.getDate() + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\r\n      const width = chartRef.current.clientWidth - margin.left - margin.right;\r\n      const height = chartRef.current.clientHeight - margin.top - margin.bottom;\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain([new Date(2022, 0, 1), new Date(2022, 11, 31)])\r\n        .range([0, width]);\r\n\r\n      const xAxis = d3\r\n        .axisBottom(x)\r\n        .tickFormat(d3.timeFormat(\"%b\"))\r\n        .tickValues(\r\n          d3.timeMonth.range(new Date(2022, 0, 1), new Date(2022, 11, 31), 1)\r\n        )\r\n        .tickSize(10)\r\n        .tickPadding(5);\r\n\r\n      const brush = d3\r\n        .brushX()\r\n        .extent([\r\n          [0, 0],\r\n          [width, height],\r\n        ])\r\n        .on(\"end\", brushed);\r\n      d3.select(chartRef.current)\r\n        .selectAll(\"*\")\r\n        .remove();\r\n      const svg = d3\r\n        .select(chartRef.current)\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n      svg\r\n        .append(\"rect\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"fill\", \"gray\");\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", `translate(0, ${height})`)\r\n        .call(xAxis);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"brush\")\r\n        .call(brush)\r\n        .call(\r\n          brush.move,\r\n          startDate && endDate\r\n            ? [x(new Date(startDate)), x(new Date(endDate))]\r\n            : null\r\n        );\r\n\r\n      function brushed() {\r\n        const selection = d3.event.selection;\r\n        const selectedStartDate = selection ? x.invert(selection[0]) : null;\r\n        const selectedEndDate = selection ? x.invert(selection[1]) : null;\r\n\r\n        if (selectedStartDate && selectedEndDate) {\r\n          setStartDate(selectedStartDate.toISOString().split(\"T\")[0]);\r\n          setEndDate(selectedEndDate.toISOString().split(\"T\")[0]);\r\n        } else {\r\n          setStartDate(null);\r\n          setEndDate(null);\r\n        }\r\n\r\n        svg.selectAll(\".selection\").attr(\"fill\", selection ? \"blue\" : \"gray\");\r\n      }\r\n    }\r\n  }, [data, startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"timeline\">\r\n      <svg ref={chartRef} width={1500} height={70}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeLineChart;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./DepthChart.css\";\r\nimport { select } from \"d3-selection\";\r\nimport { line } from \"d3-shape\";\r\nimport { axisBottom ,axisLeft} from \"d3-axis\";\r\nimport { scaleLinear } from \"d3\";\r\nfunction DepthChart() {\r\n  const [data, setData] = useState([25, 30, 45, 60, 20, 65, 75]);\r\n\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleLinear()\r\n      .domain([0, data.length - 1])\r\n      .range([0, 300]);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([0, 75])\r\n      .range([150, 0]);\r\n  \r\n    const xAxis = axisBottom(xScale).ticks(data.length).tickFormat(index=>index+1);\r\n\r\n    svg.select(\".x-axis\").style(\"transform\",\"translateY(150px)\").call(xAxis)\r\n\r\n    const yAxis = axisLeft(yScale);\r\n\r\n    svg.select(\".y-axis\").style(\"transform\",\"translateX(0px)\").call(yAxis)\r\n    const myLine = line()\r\n    .x((value, index) => xScale(index))\r\n    .y(yScale);\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data([data])\r\n      .join(\"path\")\r\n      .attr(\"class\",\"line\")\r\n      .attr(\"d\", myLine)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"blue\");\r\n\r\n\r\n  }, [data]);\r\n  return (\r\n    <div className=\"depthview\">\r\n      <p>Earthquake Depth Anaysis</p>\r\n      <svg ref={svgRef} style={{ overflow: \"visible\"}}>\r\n        <g className=\"x-axis\"></g>\r\n        <g className=\"y-axis\"></g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepthChart;\r\n","import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst baseUrl = \"https://earthquake.usgs.gov/fdsnws/event/1/\";\r\nconst GET = \"GET\";\r\n\r\n\r\nconst ACTION_HANDLERS = {\r\n  [GET]: (url, data, headers) => {\r\n    let queryUrl = url;\r\n    // if (data !== undefined) {\r\n    //   const query = qs.stringify(data);\r\n \r\n    //   queryUrl = `${queryUrl}?${query}`;\r\n    //   console.log(\"queryURL\",queryUrl)\r\n    // }\r\n\r\n    console.log(\"query\",baseUrl+queryUrl)\r\n    return axios.get(baseUrl+queryUrl , {\r\n      headers\r\n    });\r\n  },\r\n\r\n};\r\n\r\nfunction setHeaders({ contentType }) {\r\n  // set contentType\r\n\r\n   \r\n    axios.defaults.headers.get.Accept = \"application/json\";\r\n  \r\n}\r\n\r\nfunction handleError(error) {\r\n  return Promise.reject(error);\r\n}\r\nconst fetchUrl = ({ type, url, data = {}, config = {} }) => {\r\n  setHeaders(config);\r\n  const handler = ACTION_HANDLERS[type.toUpperCase()];\r\n\r\n  return handler(url, data, config.headers)\r\n    .then((response) => Promise.resolve(response.data))\r\n    .catch(handleError);\r\n};\r\n\r\nexport default fetchUrl;","const apiList = {\r\n  getData: {\r\n    url: (data) => {\r\n      return `query?format=geojson&starttime=${data.startDate}&endtime=${data.endDate}`;\r\n    },\r\n    method: \"get\",\r\n  },\r\n  getCount:{\r\n    url: (data) => {\r\n      return `count?starttime=${data.startDate}&endtime=${data.endDate}`;\r\n    },\r\n    method: \"get\",\r\n  }\r\n};\r\nexport default apiList;\r\n","import fetchUrl from \"./index\";\r\nimport apiList from \"./list\";\r\n\r\n/**\r\n * Use this commonApi function to call all APIs.\r\n * The only thing you need to make sure you pass valid arguments,\r\n * For reference you can find api list in @/api/list.js\r\n * @param {*} { parameters = [], action, module = '', data }\r\n * @return {*}\r\n */\r\nconst commonApi = ({ parameters = [], action, module = \"\", data, config }) => {\r\n\r\n  const api = apiList[`${action}${module}`];\r\n  if (api) {\r\n    return fetchUrl({\r\n      type: api.method,\r\n      url: api.url(...parameters),\r\n      data,\r\n      config\r\n    });\r\n  }\r\n\r\n  return Promise.reject(\r\n    new Error(\"Oops!, I believe you have called wrong url.\")\r\n  );\r\n};\r\n\r\nexport default commonApi;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Text from \"./components/Text\";\r\nimport Map from \"./components/Map\";\r\nimport BarChart from \"./components/BarChart\";\r\nimport TimeLine from \"./components/TimeLine\";\r\nimport DepthChart from \"./components/DepthChart\";\r\nimport commonApi from \"./api/common\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(null);\r\n  const [startDate, setStartDate] = useState(\"2022-01-01\");\r\n  const [endDate, setEndDate] = useState(\"2022-01-31\");\r\n  const [count, setCount] = useState();\r\n  const [selectedRange, setSelectedRange] = useState(null);\r\n\r\n\r\n  const [geo,setGeo]=useState(null)\r\n  const getData = async () => {\r\n    let resultData = await commonApi({\r\n      action: \"getData\",\r\n      parameters: [{ startDate: startDate, endDate: endDate }],\r\n    });\r\n    setData(resultData);\r\n    let resultCount = await commonApi({\r\n      action: \"getCount\",\r\n      parameters: [{ startDate: startDate, endDate: endDate }],\r\n    });\r\n    setCount(resultCount);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"row1\">\r\n        <Text count={count} data={data ? data.features : []} geo={geo} setGeo={setGeo}/>\r\n        <Map data={data} selectedRange={selectedRange} geo={geo} setGeo={setGeo}/>\r\n      </div>\r\n      <div className=\"row2\">\r\n      <BarChart data={data} onRangeSelected={setSelectedRange}/>\r\n        <DepthChart />\r\n      </div>\r\n      <div className=\"row3\">\r\n        <TimeLine\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          setStartDate={setStartDate}\r\n          setEndDate={setEndDate}\r\n          setSelectedRange={setSelectedRange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}