{"version":3,"sources":["components/Text.jsx","components/Map.jsx","config/color.js","components/BarChart.jsx","components/TimeLine.jsx","components/DepthChart.jsx","api/index.js","api/list.js","api/common.js","App.js","index.js"],"names":["Text","_ref","count","data","setGeo","geo","startDate","endDate","_useState","useState","_useState2","_slicedToArray","maxMag","setMaxMag","hotzones","recentEarthQuakes","sort","a","b","properties","time","slice","forEach","quake","latitude","geometry","coordinates","toFixed","longitude","place","key","concat","magnitude","mag","arrayData","Object","values","React","createElement","className","map","item","index","onClick","lat","long","eqIcon","L","Icon","iconUrl","iconSize","icons","fetchIcon","size","divIcon","html","worldBounds","latLngBounds","latLng","Map","selectedRange","selectedDepthRange","bounds","setBounds","_useState3","_useState4","zoom","setZoom","mapRef","useRef","updateMap","leaflet","current","leafletElement","getBounds","currentZoom","getZoom","getSouthWest","lng","getNorthEast","useEffect","_useSupercluster","useSupercluster","points","features","filter","feature","options","radius","maxZoom","minZoom","clusters","supercluster","style","height","width","MapContainer","center","ref","onMoveEnd","maxBounds","TileLayer","attribution","url","cluster","_cluster$geometry$coo","_cluster$properties","isCluster","pointCount","point_count","Marker","id","position","icon","length","expansionZoom","Math","min","getClusterExpansionZoom","setView","animate","Popup","Tooltip","getColor","BarChart","onRangeSelected","svgRef","resetBrushRef","magData","magType","round","magArray","keys","parseFloat","uniqueMagnitudes","barWidth","x","scaleBand","domain","d","range","paddingInner","y","scaleLinear","d3","integerTickValues","Number","isInteger","xAxis","axisBottom","tickValues","yAxis","axisLeft","select","call","getNearestMagnitude","xCoord","brush","brushX","extent","on","d3Event","selection","_d3Event$selection","minX","maxX","selectedMinMag","selectedMaxMag","append","attr","text","selectAll","remove","svg","move","join","console","log","display","justifyContent","alignItems","cursor","overflow","marginLeft","changeYear","date","newYear","dateParts","split","day","month","GetSelectedYear","yearSelected","setYear","setStartDate","setEndDate","name","onChange","event","year","target","value","newStartDate","newEndDate","selected","TimeLineChart","_ref2","chartRef","sDate","Date","eDate","push","setDate","getDate","margin","top","right","bottom","left","clientWidth","clientHeight","tickFormat","tickSize","tickPadding","selectedStartDate","invert","selectedEndDate","maxBrushDuration","getFullYear","getMonth","dateDifference","abs","getTime","toISOString","DepthChart","depth","depthExtent","xScale","yScale","max","ticks","i","ceil","generateIntegerTicks","selectedMinDepth","selectedMaxDepth","ACTION_HANDLERS","_defineProperty","headers","queryUrl","axios","get","handleError","error","Promise","reject","fetchUrl","type","_ref2$data","_ref2$config","config","contentType","defaults","Accept","handler","toUpperCase","then","response","resolve","catch","apiList","getData","method","getCount","commonApi","_ref$parameters","parameters","action","_ref$module","module","api","apply","_toConsumableArray","Error","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","result","__await","unwrapped","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","App","setData","_useState5","_useState6","_useState7","_useState8","setCount","_useState9","_useState10","setSelectedRange","_useState11","_useState12","setSelectedDepthRange","_useState13","_useState14","_useState15","_useState16","abortController","AbortController","abortSignal","signal","_asyncToGenerator","_callee","resultData","_context","abort","e","metadata","t0","arguments","TimeLine","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0aec380b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Text.css\";\nfunction Text({ count, data, geo, setGeo, startDate, endDate }) {\n  const [maxMag, setMaxMag] = useState(0);\n\n  const hotzones = {};\n\n  const recentEarthQuakes = data.sort(\n    (a, b) => b.properties.time - a.properties.time\n  ).slice(0,5)\n\n  data.forEach((quake) => {\n    const latitude = quake.geometry.coordinates[1].toFixed(1);\n    const longitude = quake.geometry.coordinates[0].toFixed(1);\n    const place = quake.properties.place;\n    const key = `${latitude},${longitude}`;\n    const magnitude = quake.properties.mag;\n    if (magnitude > maxMag) {\n      setMaxMag(magnitude);\n    }\n    if (hotzones[key]) {\n      hotzones[key].count += 1;\n    } else {\n      hotzones[key] = {\n        latitude,\n        longitude,\n        count: 1,\n        place,\n      };\n    }\n  });\n\n  const dataArray = Object.values(hotzones);\n  const sortedData = dataArray.sort((a, b) => b.count - a.count);\n  const arrayData = sortedData.slice(0, 5);\n\n  return (\n    <div className=\"text\">\n      <div className=\"text-design\">\n        <p className=\"h2\">\n          WORLD'S <br></br>EARTHQUAKES{\" \"}\n        </p>\n        <span className=\"time-zones\">\n          Data Range : {startDate} to {endDate}\n        </span>\n\n        <div className=\"earthquakestats\">\n          <hr />\n          <div className=\"statsdata\">\n            <div className=\"dataview\">\n              <span>{maxMag}</span>\n              <span>Max Magnitude</span>\n            </div>\n            <div className=\"dataview\">\n              <span>{count}</span>\n              <span>Total Count</span>\n            </div>\n          </div>\n          <hr />\n        </div>\n\n        <div className=\"hot-zones\">\n          <p className=\"hot-zone-underline\">HOT ZONES:</p>\n          <ul>\n            {arrayData.map((item,index) => (\n            \n              <li\n              key={index}\n                onClick={() => {\n                  setGeo({\n                    lat: item.latitude,\n                    long: item.longitude,\n                  });\n                }}\n              >\n                {item.place}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"recent-earthquakes\">\n          <p className=\"recent-earthquake-underline\">RECENT EARTHQUAKES:</p>\n          <ul>\n          {recentEarthQuakes.map((item,index)=>(\n            <li\n            key={index}\n            onClick={() => {\n             \n                setGeo({\n                  lat: item.geometry.coordinates[1].toFixed(\n                    1\n                  ),\n                  long: item.geometry.coordinates[0].toFixed(\n                    1\n                  ),\n                });\n            }}\n          >\n            {item.properties.place}\n          </li>\n          ))}\n           \n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Text;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  Map as MapContainer,\n  Marker,\n  Popup,\n  TileLayer,\n  Tooltip,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./Map.css\";\nconst eqIcon = new L.Icon({\n  iconUrl: \"./earthquake.svg\",\n  iconSize: [20, 20],\n});\n\nconst icons = {};\nconst fetchIcon = (count, size) => {\n  if (!icons[count]) {\n    icons[count] = L.divIcon({\n      html: `<div class=\"cluster-marker\" style=\"width: ${size}px; height: ${size}px;\">\n        ${count}\n      </div>`,\n    });\n  }\n  return icons[count];\n};\nconst worldBounds = L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180));\n\nfunction Map({ data, geo, setGeo, selectedRange, selectedDepthRange }) {\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(5); // set the default zoom level\n  const mapRef = useRef(); // adding reference to the leaflet map\n\n  function updateMap() {\n    const leaflet = mapRef.current.leafletElement;\n    const b = leaflet.getBounds();\n    const currentZoom = leaflet.getZoom();\n\n    // Set bounds state\n    setBounds([\n      b.getSouthWest().lng,\n      b.getSouthWest().lat,\n      b.getNorthEast().lng,\n      b.getNorthEast().lat,\n    ]);\n\n    // Check if current zoom is less than 3 and update if necessary\n    if (currentZoom < 2) {\n      leaflet.setZoom(2);\n      setZoom(2);\n    } else {\n      setZoom(currentZoom);\n    }\n    //  setGeo(null)\n  }\n\n  useEffect(() => {\n    updateMap();\n  }, []);\n\n  const { clusters, supercluster } = useSupercluster({\n    points: data\n      ? data.features.filter((feature) =>\n          selectedRange && selectedDepthRange\n            ? feature.properties.mag >= selectedRange[0] &&\n              feature.properties.mag <= selectedRange[1] &&\n              feature.geometry.coordinates[2] >= selectedDepthRange[0] &&\n              feature.geometry.coordinates[2] <= selectedDepthRange[1]\n            : selectedRange && !selectedDepthRange\n            ? feature.properties.mag >= selectedRange[0] &&\n              feature.properties.mag <= selectedRange[1]\n            : !selectedRange && selectedDepthRange\n            ? feature.geometry.coordinates[2] >= selectedDepthRange[0] &&\n              feature.geometry.coordinates[2] <= selectedDepthRange[1]\n            : true\n        )\n      : [],\n    bounds,\n    zoom,\n    options: { radius: 75, maxZoom: 17, minZoom: 3 },\n  });\n\n  return (\n    <div className=\"map\" style={{ height: \"100%\", width: \"100%\" }}>\n      <MapContainer\n        center={geo ? [geo.lat, geo.long] : [39.2532498, 43.6487262]}\n        zoom={geo ? 10 : 2}\n        style={{ height: \"100%\", width: \"100%\" }}\n        ref={mapRef}\n        minZoom={2} // Set the minimum zoom level\n        maxZoom={17} // Set the maximum zoom level\n        onMoveEnd={updateMap}\n        maxBounds={worldBounds}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {clusters.map((cluster) => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          // Checking if the cluster are present or not\n          const { cluster: isCluster, point_count: pointCount } =\n            cluster.properties;\n\n          // we have a cluster to render\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                position={[latitude, longitude]}\n                icon={fetchIcon(pointCount, 10 + pointCount / clusters.length)}\n                onClick={() => {\n                  const expansionZoom = Math.min(\n                    supercluster.getClusterExpansionZoom(cluster.id),\n                    17\n                  );\n                  const leaflet = mapRef.current.leafletElement;\n                  leaflet.setView([latitude, longitude], expansionZoom, {\n                    animate: true,\n                  });\n                }}\n              >\n              <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> \n              </Marker>\n            );\n          }\n          return (\n            <Marker\n              key={cluster.id}\n              position={[latitude, longitude]}\n              icon={eqIcon}\n              onClick={() => {\n                const leaflet = mapRef.current.leafletElement;\n                leaflet.setView([latitude, longitude], 15, { animate: true });\n              }}\n            >\n              <Tooltip>\n                <div className=\"tool-tip\">\n                  <div>Latitude: {latitude}</div>\n                  <div>Longitude: {longitude}</div>\n                  <div>Place: {cluster.properties.place}</div>\n                  <div>Magnitude: {cluster.properties.mag}</div>\n                  <div>Depth: {cluster.geometry.coordinates[2]} km</div>\n                </div>\n              </Tooltip>\n              {/* <Popup>{`Latitude: ${latitude}, Longitude: ${longitude}`}</Popup> */}\n            </Marker>\n          );\n        })}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Map;\n","const getColor = (mag) => {\r\n    if (mag >= -2 && mag < -1) return \"#e41a1c\";\r\n    if (mag >= -1 && mag < 0) return \"#a6cee3\";\r\n    if (mag >= 0 && mag < 1) return \"#4daf4a\";\r\n    if (mag >= 1 && mag < 2) return \"#984ea3\";\r\n    if (mag >= 2 && mag < 3) return \"#ff7f00\";\r\n    if (mag >= 3 && mag < 4) return \"#1f78b4\";\r\n    if (mag >= 4 && mag < 5) return \"#a65628\";\r\n    if (mag >= 5 && mag < 6) return \"#f781bf\";\r\n    return \"gray\";\r\n  };\r\n\r\nexport default getColor;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./BarChart.css\";\r\nimport { select, event as d3Event } from \"d3-selection\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { scaleLinear, scaleBand } from \"d3\";\r\nimport { brushX } from \"d3-brush\";\r\nimport * as d3 from \"d3\";\r\nimport getColor from \"../config/color\";\r\nfunction BarChart({ data, onRangeSelected }) {\r\n  const svgRef = useRef();\r\n  const resetBrushRef = useRef(null);\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    const magData = {};\r\n\r\n    data.features.forEach((feature) => {\r\n      const magType = Math.round(feature.properties.mag * 10) / 10;\r\n      if (magData[magType]) {\r\n        magData[magType].count += 1;\r\n      } else {\r\n        magData[magType] = {\r\n          count: 1,\r\n        };\r\n      }\r\n    });\r\n\r\n    const sortedData = Object.keys(magData).map((mag) => ({\r\n      mag: parseFloat(mag),\r\n      count: magData[mag].count,\r\n    }));\r\n    const magArray = sortedData.sort((a, b) => a.mag - b.mag);\r\n\r\n    const uniqueMagnitudes = magArray.length;\r\n    const barWidth = 300 / uniqueMagnitudes - 1;\r\n    const x = scaleBand()\r\n      .domain(magArray.map((d) => d.mag))\r\n      .range([0, 420])\r\n      .paddingInner(0.1);\r\n\r\n    const y = scaleLinear()\r\n      .domain([0, d3.max(magArray, (d) => d.count)])\r\n      .range([180, 0]);\r\n\r\n    const integerTickValues = magArray\r\n      .map((d) => d.mag)\r\n      .filter((mag) => Number.isInteger(mag));\r\n\r\n    const xAxis = axisBottom(x).tickValues(integerTickValues);\r\n    const yAxis = axisLeft(y);\r\n\r\n    select(svgRef.current)\r\n      .select(\".x-axis\")\r\n      .style(\"transform\", \"translateY(180px)\")\r\n      .call(xAxis);\r\n\r\n    select(svgRef.current)\r\n      .select(\".y-axis\")\r\n      .style(\"transform\", \"translateX(0px)\")\r\n      .call(yAxis);\r\n    const getNearestMagnitude = (xCoord) => {\r\n      const index = Math.round((xCoord * uniqueMagnitudes) / 420);\r\n      return magArray[index] ? magArray[index].mag : null;\r\n    };\r\n    const brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [420, 180],\r\n      ])\r\n      .on(\"brush end\", () => {\r\n        if (d3Event.selection) {\r\n          const [minX, maxX] = d3Event.selection;\r\n          const selectedMinMag = getNearestMagnitude(minX);\r\n          let selectedMaxMag = getNearestMagnitude(maxX);\r\n\r\n          if (selectedMaxMag == null) {\r\n            selectedMaxMag = 10;\r\n          }\r\n          onRangeSelected([selectedMinMag, selectedMaxMag]);\r\n        } else {\r\n          onRangeSelected(null);\r\n        }\r\n      });\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `translate(${420 / 2},${210})`)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Magnitude\");\r\n\r\n    select(svgRef.current)\r\n      .append(\"text\")\r\n      .attr(\"transform\", `rotate(-90)`)\r\n      .attr(\"x\", -(180 / 2))\r\n      .attr(\"y\", -50)\r\n      .attr(\"dy\", \"1em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Total Count\");\r\n\r\n    select(svgRef.current).selectAll(\".brush\").remove();\r\n    onRangeSelected(null);\r\n    const svg = select(svgRef.current);\r\n    const resetBrush = () => {\r\n      svg.select(\".brush\").call(brush.move, null);\r\n      onRangeSelected(null);\r\n    };\r\n    resetBrushRef.current = resetBrush;\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(magArray)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (d) => x(d.mag))\r\n      .attr(\"y\", (d) => y(d.count))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"height\", (d) => 180 - y(d.count))\r\n      .attr(\"fill\", (d) => getColor(d.mag))\r\n      .on(\"click\", (d) => {\r\n        console.log(\"d\", d);\r\n      });\r\n\r\n    select(svgRef.current).append(\"g\").attr(\"class\", \"brush\").call(brush);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"barview\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p className=\"bar-chart-name\">Earthquake Magnitude Histogram</p>\r\n        <button\r\n          className=\"button-style\"\r\n          onClick={resetBrushRef.current}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Reset{\" \"}\r\n        </button>\r\n      </div>\r\n      <svg ref={svgRef} style={{ overflow: \"visible\", marginLeft: \"12dvh\" }}>\r\n        <g className=\"x-axis\"></g>\r\n        <g className=\"y-axis\"></g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./TimeLine.css\";\n\nfunction changeYear(date, newYear) {\n  const dateParts = date.split(\"-\");\n  const day = dateParts[2];\n  const month = dateParts[1];\n  return `${newYear}-${month}-${day}`;\n}\nconst GetSelectedYear = ({\n  yearSelected,\n  setYear,\n  setStartDate,\n  setEndDate,\n  startDate,\n  endDate,\n}) => {\n  const onChange = (event) => {\n    let year = event.target.value;\n    let newStartDate = changeYear(startDate, year);\n    let newEndDate = changeYear(endDate, year);\n    setStartDate(newStartDate);\n    setEndDate(newEndDate);\n\n    setYear(year);\n  };\n  return (\n    <select id=\"year\" name=\"year\" onChange={onChange} className=\"year\">\n      {[\n        \"2024\",\n        \"2023\",\n        \"2022\",\n        \"2021\",\n        \"2020\",\n        \"2019\",\n        \"2018\",\n        \"2017\",\n        \"2016\",\n        \"2015\",\n        \"2014\",\n        \"2013\",\n        \"2012\",\n        \"2011\",\n        \"2010\",\n        \"2009\",\n        \"2008\",\n        \"2007\",\n        \"2006\",\n        \"2005\",\n        \"2004\",\n        \"2003\",\n        \"2002\",\n        \"2001\",\n        \"2000\",\n      ].map((year) => (\n        <option key={year} value={year} selected={year === yearSelected}>\n          {year}\n        </option>\n      ))}\n    </select>\n  );\n};\nconst TimeLineChart = ({\n  startDate,\n  endDate,\n  setStartDate,\n  setEndDate,\n  year,\n  setYear,\n}) => {\n  const chartRef = useRef(null);\n\n  const data = [];\n\n  let sDate = new Date(year, 0, 1);\n  const eDate = new Date(year, 11, 31);\n\n  while (sDate <= eDate) {\n    data.push({ day: new Date(sDate), value: 1 });\n    sDate.setDate(sDate.getDate() + 1);\n  }\n\n  useEffect(() => {\n    if (data) {\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n      const width = chartRef.current.clientWidth - margin.left - margin.right;\n      const height = chartRef.current.clientHeight - margin.top - margin.bottom;\n      const x = d3\n        .scaleTime()\n        .domain([new Date(year, 0, 1), new Date(year, 11, 31)])\n        .range([0, width]);\n\n      const xAxis = d3\n        .axisBottom(x)\n        .tickFormat(d3.timeFormat(\"%b\"))\n        .tickValues(\n          d3.timeMonth.range(new Date(year, 0, 1), new Date(year, 11, 31), 1)\n        )\n        .tickSize(10)\n        .tickPadding(5);\n\n      const brush = d3\n        .brushX()\n        .extent([\n          [0, 0],\n          [width, height],\n        ])\n        .on(\"end\", brushed);\n      d3.select(chartRef.current).selectAll(\"*\").remove();\n      const svg = d3\n        .select(chartRef.current)\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      svg\n        .append(\"rect\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"gray\");\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(xAxis);\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"brush\")\n        .call(brush)\n        .call(\n          brush.move,\n          startDate && endDate\n            ? [x(new Date(startDate)), x(new Date(endDate))]\n            : null\n        );\n\n        function brushed() {\n          const selection = d3.event.selection;\n          let selectedStartDate = selection ? x.invert(selection[0]) : null;\n          let selectedEndDate = selection ? x.invert(selection[1]) : null;\n        \n          if (selectedStartDate && selectedEndDate) {\n            const daysInMonth = new Date(\n              selectedStartDate.getFullYear(),\n              selectedStartDate.getMonth() + 1,\n              0\n            ).getDate();\n            const maxBrushDuration = daysInMonth;\n            const dateDifference = Math.abs(\n              (selectedEndDate - selectedStartDate) / (1000 * 60 * 60 * 24)\n            );\n         \n            if (dateDifference > maxBrushDuration) {\n              selectedEndDate = new Date(\n                selectedStartDate.getTime() + maxBrushDuration * 24 * 60 * 60 * 1000\n              );\n              if (selectedEndDate > eDate) {\n                selectedEndDate = eDate;\n                selectedStartDate = new Date(\n                  selectedEndDate.getTime() - maxBrushDuration * 24 * 60 * 60 * 1000\n                );\n              }\n              svg.select(\".brush\").call(brush.move, [\n                x(selectedStartDate),\n                x(selectedEndDate),\n              ]);\n            }\n            if(dateDifference<1)\n            {\n              selectedStartDate = new Date(startDate);\n            selectedEndDate = new Date(endDate);\n            svg.select(\".brush\").call(brush.move, [\n              x(selectedStartDate),\n              x(selectedEndDate),\n            ]);\n            }\n            setStartDate(selectedStartDate.toISOString().split(\"T\")[0]);\n            setEndDate(selectedEndDate.toISOString().split(\"T\")[0]);\n          } else {\n            selectedStartDate = new Date(startDate);\n            selectedEndDate = new Date(endDate);\n            svg.select(\".brush\").call(brush.move, [\n              x(selectedStartDate),\n              x(selectedEndDate),\n            ]);\n          }\n      \n          svg.selectAll(\".selection\").attr(\"fill\", selection ? \"blue\" : \"gray\");\n        }\n        \n    }\n  }, [data, startDate, endDate, year]);\n  return (\n    <div className=\"timeline\">\n      <div className=\"filter\">\n        <label className=\"year-filter\">Filter:</label>\n        <GetSelectedYear\n          yearSelected={year}\n          setYear={setYear}\n          startDate={startDate}\n          endDate={endDate}\n          setStartDate={setStartDate}\n          setEndDate={setEndDate}\n        />\n      </div>\n      <svg ref={chartRef} width=\"90%\" height={70}></svg>\n    </div>\n  );\n};\n\nexport default TimeLineChart;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./DepthChart.css\";\nimport { select, event as d3Event } from \"d3-selection\";\n\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { scaleLinear } from \"d3\";\nimport { extent } from \"d3-array\";\nimport getColor from \"../config/color\";\nimport * as d3 from \"d3\";\nimport { brushX } from \"d3-brush\";\nimport { format } from \"d3-format\";\n\nfunction generateIntegerTicks(min, max) {\n  const ticks = [];\n  for (let i = Math.ceil(min); i <= max; i++) {\n    if (Number.isInteger(i)) {\n      ticks.push(i);\n    }\n  }\n  return ticks;\n}\n\nfunction DepthChart({ data, onRangeSelected }) {\n  const svgRef = useRef();\n  const resetBrushRef = useRef(null);\n  useEffect(() => {\n    if (!data) return;\n\n    let magData = [];\n\n    data.features.forEach((feature) => {\n      const mag = Math.round(feature.properties.mag * 10) / 10;\n      const depth = feature.geometry.coordinates[2];\n      if (depth > 0 ) {\n        magData.push({ depth: depth, magnitude: mag });\n      }\n    });\n\n    const svg = select(svgRef.current);\n    const resetBrush = () => {\n      svg.select(\".brush\").call(brush.move, null);\n      onRangeSelected(null);\n    };\n    resetBrushRef.current = resetBrush;\n    const depthExtent = extent(magData, (d) => d.depth);\n    const margin = (depthExtent[1] - depthExtent[0]) * 0.003; // Calculate 5% margin\n    const xScale = scaleLinear()\n      .domain([depthExtent[0] - margin, depthExtent[1]]) // Add the margin to the minimum depth value\n      .range([0, 420]);\n\n    const yScale = scaleLinear()\n      .domain([d3.min(magData, (d) => d.magnitude), d3.max(magData, (d) => d.magnitude)])\n      .range([180, 0]);\n\n    const xAxis = axisBottom(xScale);\n\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(180px)\").call(xAxis);\n\n    const yAxis = axisLeft(yScale).tickValues(\n      generateIntegerTicks(yScale.domain()[0], yScale.domain()[1])\n    );\n\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(0px)\").call(yAxis);\n\n    select(svgRef.current)\n      .append(\"text\")\n      .attr(\"transform\", `translate(${420 / 2},${210})`)\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Depth (KM)\");\n\n    const brush = brushX()\n      .extent([\n        [0, 0],\n        [420, 180],\n      ])\n      .on(\"brush end\", () => {\n        if (d3Event.selection) {\n          const [minX, maxX] = d3Event.selection;\n          const selectedMinDepth = xScale.invert(minX);\n          const selectedMaxDepth = xScale.invert(maxX);\n\n          onRangeSelected([selectedMinDepth, selectedMaxDepth]);\n        }\n        else {\n          onRangeSelected(null);\n        }\n      });\n\n    select(svgRef.current).selectAll(\".brush\").remove();\n    onRangeSelected(null);\n    select(svgRef.current)\n      .append(\"text\")\n      .attr(\"transform\", `rotate(-90)`)\n      .attr(\"x\", -(180 / 2))\n      .attr(\"y\", -50)\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Magnitude\");\n\n    svg\n      .selectAll(\".circle\")\n      .data(magData)\n      .join(\"circle\")\n      .attr(\"class\", \"circle\")\n      .attr(\"cx\", (d) => xScale(d.depth))\n      .attr(\"cy\", (d) => yScale(d.magnitude))\n      .attr(\"r\", 1)\n      .attr(\"fill\", (d) => getColor(d.magnitude));\n\n    select(svgRef.current).append(\"g\").attr(\"class\", \"brush\").call(brush);\n  }, [data]);\n  return (\n    <div className=\"depthview\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <p className=\"bar-chart-name\">Depth Chart Analysis</p>\n        <button className=\"button-style\" onClick={resetBrushRef.current} style={{cursor:\"pointer\"}}>\n          \n          Reset\n        </button>\n      </div>\n      <svg ref={svgRef} style={{ overflow: \"visible\", marginLeft: \"10dvh\" }}>\n        <g className=\"x-axis\"></g>\n        <g className=\"y-axis\"></g>\n      </svg>\n    </div>\n  );\n}\n\nexport default DepthChart;\n","import axios from \"axios\";\nimport qs from \"qs\";\n\nconst baseUrl = \"https://earthquake.usgs.gov/fdsnws/event/1/\";\nconst GET = \"GET\";\n\n\nconst ACTION_HANDLERS = {\n  [GET]: (url, data, headers) => {\n    let queryUrl = url;\n    // if (data !== undefined) {\n    //   const query = qs.stringify(data);\n \n    //   queryUrl = `${queryUrl}?${query}`;\n    //   console.log(\"queryURL\",queryUrl)\n    // }\n\n    return axios.get(baseUrl+queryUrl+\"&mindepth=0&maxdepth=250&minmagnitude=0\" , {\n      headers\n    });\n  },\n\n};\n\nfunction setHeaders({ contentType }) {\n  // set contentType\n\n   \n    axios.defaults.headers.get.Accept = \"application/json\";\n  \n}\n\nfunction handleError(error) {\n  return Promise.reject(error);\n}\nconst fetchUrl = ({ type, url, data = {}, config = {} }) => {\n  setHeaders(config);\n  const handler = ACTION_HANDLERS[type.toUpperCase()];\n\n  return handler(url, data, config.headers)\n    .then((response) => Promise.resolve(response.data))\n    .catch(handleError);\n};\n\nexport default fetchUrl;","const apiList = {\n  getData: {\n    url: (data) => {\n      return `query?format=geojson&starttime=${data.startDate}&endtime=${data.endDate}`;\n    },\n    method: \"get\",\n  },\n  getCount:{\n    url: (data) => {\n      return `count?starttime=${data.startDate}&endtime=${data.endDate}`;\n    },\n    method: \"get\",\n  }\n};\nexport default apiList;\n","import fetchUrl from \"./index\";\nimport apiList from \"./list\";\n\n/**\n * Use this commonApi function to call all APIs.\n * The only thing you need to make sure you pass valid arguments,\n * For reference you can find api list in @/api/list.js\n * @param {*} { parameters = [], action, module = '', data }\n * @return {*}\n */\nconst commonApi = ({ parameters = [], action, module = \"\", data, config }) => {\n\n  const api = apiList[`${action}${module}`];\n  if (api) {\n    return fetchUrl({\n      type: api.method,\n      url: api.url(...parameters),\n      data,\n      config\n    });\n  }\n\n  return Promise.reject(\n    new Error(\"Oops!, I believe you have called wrong url.\")\n  );\n};\n\nexport default commonApi;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Text from \"./components/Text\";\nimport Map from \"./components/Map\";\nimport BarChart from \"./components/BarChart\";\nimport TimeLine from \"./components/TimeLine\";\nimport DepthChart from \"./components/DepthChart\";\nimport commonApi from \"./api/common\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [startDate, setStartDate] = useState(\"2022-01-01\");\n  const [endDate, setEndDate] = useState(\"2022-01-11\");\n  const [count, setCount] = useState();\n  const [selectedRange, setSelectedRange] = useState(null);\n  const [selectedDepthRange, setSelectedDepthRange] = useState(null);\n  const [geo, setGeo] = useState(null);\n  const [year,setYear]=useState(\"2022\")\n\n  let abortController = new AbortController();\nlet abortSignal = abortController.signal;\n  const getData = async () => {\n    try {\n      abortController.abort(); // Abort any previous request\n    } catch (e) {}\n  \n    try{\n    let resultData = await commonApi({\n      action: \"getData\",\n      parameters: [{ startDate: startDate, endDate: endDate }],\n      signal: abortSignal \n    });\n    setData(resultData);\n    \n    setCount(resultData.metadata.count);\n  }\n  catch(error)\n  {\n    console.error(\"error\",error)\n  }finally {\n    abortController.abort(); // abort the request\n  }\n   \n  };\n\n  useEffect(() => {\n    getData();\n  }, [startDate, endDate]);\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"row1\">\n        <div className=\"text-container\">\n          <Text\n            count={count}\n            data={data ? data.features : []}\n            geo={geo}\n            setGeo={setGeo}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        </div>\n        <div className=\"map-container\">\n          <Map\n            data={data}\n            selectedRange={selectedRange}\n            selectedDepthRange={selectedDepthRange}\n            geo={geo}\n            setGeo={setGeo}\n          />\n          <div className=\"row2\">\n            <div className=\"bar-chart\">\n              <BarChart data={data} onRangeSelected={setSelectedRange} />\n            </div>\n            <div className=\"depth-chart\">\n              <DepthChart data={data} onRangeSelected={setSelectedDepthRange}/>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row3\">\n        <div className=\"time-container\">\n          <TimeLine\n            startDate={startDate}\n            endDate={endDate}\n            setStartDate={setStartDate}\n            setEndDate={setEndDate}\n            setSelectedRange={setSelectedRange}\n            year={year}\n            setYear={setYear}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}